# Python CircleCI 2.0 configuration file
# Check https://circleci.com/developer/images/image/cimg/python for more details
version: 2.1
jobs:
  build:
    docker:
      # CircleCI maintains a library of pre-built images documented at
      # https://circleci.com/developer/images
      # use `-browsers` prefix for selenium tests, e.g. `<image_name>-browsers`

      - image: cimg/python:3.9
        environment:
          TZ: America/New_York


    steps:
      - checkout

      - run:
          name: Install node dependencies
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash
            echo ". ~/.nvm/nvm.sh" >> $BASH_ENV
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
            nvm install v14.15.5
            nvm use 14.15.5
            nvm alias default 14.15.5
            npm install -g grunt-cli
            npm install
            npm run build

      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv .env
            . .env/bin/activate
            pip install -r requirements.txt

      - run:
          name: Run tests
          command: |
            . .env/bin/activate
            npm run build
            mkdir compiled
            python manage.py compile_frontend

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: Install cf cli
          command: |
            mkdir -p $HOME/bin
            export PATH=$HOME/bin:$PATH
            curl -L "https://cli.run.pivotal.io/stable?release=linux64-binary&version=7.1.0" | tar xzv -C $HOME/bin

      - deploy:
          name: Deploy eregs
          command: |
            export PATH=$HOME/bin:$PATH
            . .env/bin/activate
            npm run build
            python manage.py compile_frontend   # builds the frontend
            invoke deploy --login True --yes
